Namespaces:
  =: io.murano.traffic
  std: io.murano
  res: io.murano.resources
  sys: io.murano.system
  apps: io.murano.apps
  net: io.murano.networking
  bigip: io.murano.contrib.bigIp

Name: F5LoadBalancer

Properties:
  bigip:
    Contract: $.class(bigip:Api)
    Usage: Runtime

Extends:
  - LoadBalancer
  - std:Application

Workflow:
  initialize:
    Body:
      - $.environment: $.find(std:Environment).require()
      - $.bigip: new(bigip:Api)

  deploy:

  createPool:
    Body:
      - If: not $.getAttr(poolCreated, false)
        Then:
          - $resources: new(sys:Resources)
          - $.environment.reporter.report($this, '[F5LoadBalancer] Creating LB pool')
          - $.virtualIp: $.bigip.createPool($.name, $.port, $.balancingMethod)
          - $.setAttr(poolCreated, true)
          - $.environment.reporter.report($this, '[F5LoadBalancer] LB pool is created')

  addMember:
    Arguments:
      instance:
        Contract: $.class(res:Instance).notNull()
    Body:
      - $resources: new(sys:Resources)
      - $.environment.reporter.report($this, '[F5LoadBalancer] Adding LB Member')
      - $.bigip.addMember($.name, $.port, $instance.ipAddresses[0])
